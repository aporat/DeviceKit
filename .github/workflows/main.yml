name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  danger:
    name: Danger
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2

      - uses: MeilCli/danger-action@v5
        with:
          plugins_file: Gemfile
          install_path: vendor/bundle
          danger_file: Dangerfile
          danger_id: danger-pr
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Tests on ${{ matrix.device }} ${{ matrix.os }}
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: iOS Simulator
            device: iPhone 16 Pro Max
            os: 18.2
          - platform: iOS Simulator
            device: iPhone 16 Pro
            os: 18.2
          - platform: iOS Simulator
            device: iPhone 16
            os: 18.2
          - platform: iOS Simulator
            device: iPhone SE (3rd generation)
            os: 18.2
          - platform: tvOS Simulator
            device: Apple TV
            os: 18.2
          - platform: tvOS Simulator
            device: Apple TV 4K (3rd generation)
            os: 18.2
          - platform: watchOS Simulator
            device: Apple Watch Series 10 (46mm)
            os: 11.2

    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2

      - name: Install Project Gems
        run: bundle install

      - name: xcodebuild
        run: set -o pipefail && xcodebuild -scheme DeviceKit -destination "platform=${{ matrix.platform }},name=${{ matrix.device }},OS=${{ matrix.os }}" -configuration Debug ONLY_ACTIVE_ARCH=YES -enableCodeCoverage YES -derivedDataPath ./DerivedData -resultBundlePath ./TestResults.xcresult test

      - name: Install xcresultparser
        run: brew install xcresultparser

      - name: Generate Coverage Report (Slather)
        run: |
          bundle exec slather coverage \
            --scheme DeviceKit \
            --output-directory ./coverage \
            --cobertura-xml \
            --build-directory ./DerivedData \
            "./DeviceKit.xcodeproj"

      - name: Convert Test Results to JUnit
        run: |
          xcresultparser \
            --output-format junit \
            ./TestResults.xcresult > ./test-results.xml

      - name: Upload Code Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: ./coverage/cobertura.xml

      - name: Upload Test Results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: ./test-results.xml
